#!/bin/bash

# debug_nginx.sh - Script ƒë·ªÉ debug l·ªói nginx
# S·ª≠ d·ª•ng: ./debug_nginx.sh

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_header() {
    echo -e "${BLUE}[DEBUG NGINX]${NC} $1"
}

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

print_header "Nginx Debug Tool"
echo "==============================="

# 1. Check Docker containers
print_header "1. Ki·ªÉm tra Docker containers"
echo "Docker containers ƒëang ch·∫°y:"
docker ps | grep -E "(nginx|app|mariadb)" || echo "Kh√¥ng c√≥ containers n√†o ƒëang ch·∫°y"

echo
echo "Docker compose status:"
cd "$SCRIPT_DIR"
docker-compose ps

# 2. Check nginx container logs
print_header "2. Ki·ªÉm tra nginx container logs"
if docker-compose ps nginx | grep -q "Up"; then
    print_status "Nginx container ƒëang ch·∫°y - xem logs g·∫ßn nh·∫•t:"
    docker-compose logs --tail=20 nginx
else
    print_error "Nginx container kh√¥ng ch·∫°y!"
    echo "Logs t·ª´ l·∫ßn kh·ªüi ƒë·ªông cu·ªëi:"
    docker-compose logs --tail=20 nginx || echo "Kh√¥ng c√≥ logs"
fi

# 3. Check nginx config syntax
print_header "3. Ki·ªÉm tra nginx config syntax"
if docker-compose ps nginx | grep -q "Up"; then
    print_status "Testing nginx config inside container..."
    if docker-compose exec nginx nginx -t; then
        print_status "‚úÖ Nginx config syntax OK"
    else
        print_error "‚ùå Nginx config c√≥ l·ªói syntax"
    fi
else
    print_warning "Container kh√¥ng ch·∫°y - kh√¥ng th·ªÉ test config"
fi

# 4. Check ports
print_header "4. Ki·ªÉm tra port conflicts"
echo "Ports ƒëang ƒë∆∞·ª£c s·ª≠ d·ª•ng:"
echo "Port 1027 (HTTP):"
netstat -tlnp 2>/dev/null | grep :1027 || echo "  Port 1027 free"
echo "Port 1443 (HTTPS):"
netstat -tlnp 2>/dev/null | grep :1443 || echo "  Port 1443 free"
echo "Port 80 (HTTP - should be used by other service):"
netstat -tlnp 2>/dev/null | grep :80 || echo "  Port 80 free"

# 5. Check nginx config files
print_header "5. Ki·ªÉm tra nginx config files"
echo "Config files trong nginx/conf.d/:"
ls -la "${SCRIPT_DIR}/nginx/conf.d/" 2>/dev/null || echo "Th∆∞ m·ª•c kh√¥ng t·ªìn t·∫°i"

echo
echo "SSL certificates trong nginx/ssl/:"
ls -la "${SCRIPT_DIR}/nginx/ssl/" 2>/dev/null || echo "Th∆∞ m·ª•c kh√¥ng t·ªìn t·∫°i"

# 6. Check main nginx config
print_header "6. Ki·ªÉm tra main nginx config"
if [ -f "${SCRIPT_DIR}/nginx/nginx.conf" ]; then
    print_status "File nginx.conf t·ªìn t·∫°i"
    echo "Ki·ªÉm tra syntax c∆° b·∫£n..."
    if grep -q "server_name" "${SCRIPT_DIR}/nginx/nginx.conf"; then
        print_status "‚úÖ Config c√≥ v·∫ª OK"
    else
        print_warning "Config c√≥ th·ªÉ thi·∫øu m·ªôt s·ªë directives"
    fi
else
    print_error "‚ùå File nginx/nginx.conf kh√¥ng t·ªìn t·∫°i!"
fi

# 7. Check app connectivity
print_header "7. Ki·ªÉm tra app connectivity"
if docker-compose ps app | grep -q "Up"; then
    print_status "App container ƒëang ch·∫°y"
    echo "Testing connection t·ª´ nginx ƒë·∫øn app..."
    if docker-compose exec nginx ping -c 1 app >/dev/null 2>&1; then
        print_status "‚úÖ Nginx c√≥ th·ªÉ k·∫øt n·ªëi ƒë·∫øn app"
    else
        print_error "‚ùå Nginx kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn app"
    fi
else
    print_error "‚ùå App container kh√¥ng ch·∫°y!"
fi

# 8. Recommendations
print_header "8. Khuy·∫øn ngh·ªã"
echo
if ! docker-compose ps nginx | grep -q "Up"; then
    print_error "üîß NGINX CONTAINER KH√îNG CH·∫†Y!"
    echo "Th·ª≠ c√°c l·ªánh sau:"
    echo "  1. docker-compose logs nginx      # Xem l·ªói chi ti·∫øt"
    echo "  2. docker-compose up nginx       # Start l·∫°i nginx"
    echo "  3. docker-compose down && docker-compose up -d --build  # Rebuild all"
    echo
fi

if ! docker-compose ps app | grep -q "Up"; then
    print_error "üîß APP CONTAINER KH√îNG CH·∫†Y!"
    echo "Th·ª≠ c√°c l·ªánh sau:"
    echo "  1. docker-compose logs app        # Xem l·ªói chi ti·∫øt"
    echo "  2. docker-compose up app         # Start l·∫°i app"
    echo
fi

echo "üìã Debug commands:"
echo "  - Xem logs chi ti·∫øt: docker-compose logs -f nginx"
echo "  - Rebuild containers: docker-compose down && docker-compose up -d --build"
echo "  - Test nginx config: docker-compose exec nginx nginx -t"
echo "  - Restart nginx: docker-compose restart nginx"
echo "  - Check network: docker network ls"
echo

print_header "Debug ho√†n t·∫•t!"
echo "N·∫øu v·∫´n c√≥ l·ªói, copy output n√†y v√† logs chi ti·∫øt ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ th√™m."