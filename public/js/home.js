document.addEventListener('DOMContentLoaded', function() {
    // Kh·ªüi t·∫°o bi·∫øn
    let socket;
    let userId;
    let username;
    
    // K·∫øt n·ªëi Socket.IO
    function connectSocket() {
        console.log('ƒêang k·∫øt n·ªëi Socket.IO...');
        socket = io();
        
        socket.on('connect', () => {
            console.log('‚úÖ ƒê√£ k·∫øt n·ªëi Socket.IO th√†nh c√¥ng!', socket.id);
        });
        
        socket.on('connect_error', (error) => {
            console.error('‚ùå L·ªói k·∫øt n·ªëi Socket.IO:', error);
        });
        
        socket.on('disconnect', (reason) => {
            console.log('üîå Socket.IO ƒë√£ ng·∫Øt k·∫øt n·ªëi:', reason);
        });
    }
    
    // Ki·ªÉm tra v√† l·∫•y c√°c element c·∫ßn thi·∫øt
    function getElements() {
        const elements = {
            modal: document.getElementById('room-modal'),
            createRoomBtn: document.getElementById('create-room-btn'),
            joinRoomBtn: document.getElementById('join-room-btn'),
            closeBtn: document.querySelector('.close'),
            createRoomForm: document.getElementById('create-room-form'),
            joinRoomForm: document.getElementById('join-room-form'),
            soloBtn: document.getElementById('solo-battle-btn')
        };
        
        // Ki·ªÉm tra xem t·∫•t c·∫£ element c√≥ t·ªìn t·∫°i kh√¥ng
        for (const [key, element] of Object.entries(elements)) {
            if (!element) {
                console.error(`‚ùå Kh√¥ng t√¨m th·∫•y element: ${key}`);
                return null;
            }
        }
        
        console.log('‚úÖ T·∫•t c·∫£ element ƒë√£ ƒë∆∞·ª£c t√¨m th·∫•y');
        return elements;
    }
    
    // L·∫•y c√°c element
    const elements = getElements();
    if (!elements) {
        console.error('‚ùå Kh√¥ng th·ªÉ kh·ªüi t·∫°o trang v√¨ thi·∫øu element');
        return;
    }
    
    const { modal, createRoomBtn, joinRoomBtn, closeBtn, createRoomForm, joinRoomForm, soloBtn } = elements;
    
    // L·∫•y th√¥ng tin ng∆∞·ªùi d√πng t·ª´ session
    fetch('/api/user')
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            console.log('üì® D·ªØ li·ªáu ng∆∞·ªùi d√πng:', data);
            
            if (data.id && data.username) {
                userId = data.id;
                username = data.username;
                
                // Ki·ªÉm tra element username-display c√≥ t·ªìn t·∫°i kh√¥ng
                const usernameDisplay = document.getElementById('username-display');
                if (usernameDisplay) {
                    usernameDisplay.textContent = `Xin ch√†o, ${data.username}`;
                } else {
                    console.warn('‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y element username-display');
                }
                
                // Ki·ªÉm tra v√† hi·ªÉn th·ªã admin panel n·∫øu ng∆∞·ªùi d√πng l√† admin
                if (data.isAdmin) {
                    console.log('üëë Ng∆∞·ªùi d√πng l√† admin, hi·ªÉn th·ªã admin panel');
                    showAdminPanel();
                }
                
                // K·∫øt n·ªëi Socket.IO sau khi c√≥ th√¥ng tin ng∆∞·ªùi d√πng
                connectSocket();
            } else {
                console.log('‚ùå Kh√¥ng c√≥ th√¥ng tin ng∆∞·ªùi d√πng h·ª£p l·ªá, chuy·ªÉn v·ªÅ trang ƒëƒÉng nh·∫≠p');
                window.location.href = '/login';
            }
        })
        .catch(error => {
            console.error('‚ùå L·ªói khi l·∫•y th√¥ng tin ng∆∞·ªùi d√πng:', error);
            // Kh√¥ng chuy·ªÉn h∆∞·ªõng ngay l·∫≠p t·ª©c, ƒë·ªÉ ng∆∞·ªùi d√πng c√≥ th·ªÉ debug
            // window.location.href = '/login';
        });
    
    // Create room button
    createRoomBtn.addEventListener('click', function() {
        modal.style.display = 'block';
        createRoomForm.style.display = 'block';
        joinRoomForm.style.display = 'none';
    });
    
    // Join room button
    joinRoomBtn.addEventListener('click', function() {
        modal.style.display = 'block';
        createRoomForm.style.display = 'none';
        joinRoomForm.style.display = 'block';
    });
    
    // Close modal
    closeBtn.addEventListener('click', function() {
        modal.style.display = 'none';
    });
    
    // Close modal when clicking outside
    window.addEventListener('click', function(event) {
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    });
    
    // Create room form submission
    document.getElementById('create-room-submit').addEventListener('click', function() {
        const roomName = document.getElementById('room-name').value.trim();
        
        console.log('ƒêang t·∫°o ph√≤ng v·ªõi t√™n:', roomName);
        console.log('Socket tr·∫°ng th√°i:', socket ? 'ƒê√£ k·∫øt n·ªëi' : 'Ch∆∞a k·∫øt n·ªëi');
        
        if (!roomName) {
            alert('Vui l√≤ng nh·∫≠p t√™n ph√≤ng.');
            return;
        }
        
        if (!socket) {
            alert('ƒêang k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß. Vui l√≤ng th·ª≠ l·∫°i sau.');
            return;
        }
        
        // G·ª≠i y√™u c·∫ßu t·∫°o ph√≤ng ƒë·∫øn server qua Socket.IO
        console.log('G·ª≠i y√™u c·∫ßu t·∫°o ph√≤ng...');
        socket.emit('create_room', {
            userId: userId,
            username: username,
            roomName: roomName
        }, function(response) {
            console.log('Ph·∫£n h·ªìi t·ª´ server:', response);
            if (response.success) {
                // L∆∞u th√¥ng tin ph√≤ng v√†o localStorage
                localStorage.setItem('currentRoom', JSON.stringify({
                    id: response.room.id,
                    name: response.room.name,
                    code: response.room.code,
                    creator: true
                }));
                
                // Chuy·ªÉn ƒë·∫øn trang ƒë·∫•u ph√≤ng
                window.location.href = '/room-battle';
            } else {
                alert('Kh√¥ng th·ªÉ t·∫°o ph√≤ng: ' + response.error);
            }
        });
    });
    
    // Join room form submission
    document.getElementById('join-room-submit').addEventListener('click', function() {
        const roomCode = document.getElementById('room-code').value.trim().toUpperCase();
        
        if (!roomCode) {
            alert('Vui l√≤ng nh·∫≠p m√£ ph√≤ng.');
            return;
        }
        
        if (!socket) {
            alert('ƒêang k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß. Vui l√≤ng th·ª≠ l·∫°i sau.');
            return;
        }
        
        // L∆∞u th√¥ng tin ph√≤ng v√†o localStorage
        localStorage.setItem('currentRoom', JSON.stringify({
            code: roomCode,
            creator: false
        }));
        
        // Chuy·ªÉn ƒë·∫øn trang ƒë·∫•u ph√≤ng
        window.location.href = '/room-battle';
    });
    
    // Solo battle button
    soloBtn.addEventListener('click', function() {
        window.location.href = '/solo-battle';
    });
    
    // X√≥a ph·∫ßn toggle UI kh√¥ng c·∫ßn thi·∫øt
    // if (toggleUIBtn) {
    //     toggleUIBtn.addEventListener('click', async function() {
    //         try {
    //             // G·ª≠i y√™u c·∫ßu API ƒë·ªÉ chuy·ªÉn ƒë·ªïi giao di·ªán
    //             const response = await fetch('/api/settings/ui', {
    //                 method: 'POST',
    //                 headers: {
    //                     'Content-Type': 'application/json',
    //                 },
    //                 body: JSON.stringify({
    //                     useModernUI: true
    //             }));
    //             
    //             if (!response.ok) {
    //                 throw new Error('Kh√¥ng th·ªÉ chuy·ªÉn ƒë·ªïi giao di·ªán');
    //             }
    //             
    //             // Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang ch·ªß v·ªõi giao di·ªán m·ªõi
    //             window.location.href = '/?modern=true';
    //         } catch (error) {
    //             console.error('L·ªói khi chuy·ªÉn ƒë·ªïi giao di·ªán:', error);
    //             alert('Kh√¥ng th·ªÉ chuy·ªÉn ƒë·ªïi giao di·ªán. Vui l√≤ng th·ª≠ l·∫°i sau.');
    //         }
    //     });
    // }
    
    // H√†m hi·ªÉn th·ªã admin panel
    function showAdminPanel() {
        const adminPanel = document.getElementById('admin-panel');
        const adminUploadLink = document.getElementById('admin-upload-link');
        
        if (adminPanel) {
            adminPanel.style.display = 'block';
            console.log('‚úÖ ƒê√£ hi·ªÉn th·ªã admin panel');
        } else {
            console.warn('‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y admin panel');
        }
        
        if (adminUploadLink) {
            adminUploadLink.style.display = 'block';
            console.log('‚úÖ ƒê√£ hi·ªÉn th·ªã admin upload link');
        } else {
            console.warn('‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y admin upload link');
        }
    }
});