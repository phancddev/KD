import { getUsersForDeletion } from './db/users.js';

async function testSimplePreview() {
  try {
    console.log('üß™ Test preview ƒë∆°n gi·∫£n...\n');

    // Test 1: Kh√¥ng c√≥ ƒëi·ªÅu ki·ªán n√†o
    console.log('1Ô∏è‚É£ Test kh√¥ng c√≥ ƒëi·ªÅu ki·ªán n√†o:');
    try {
      const preview1 = await getUsersForDeletion({});
      console.log(`   ‚úÖ Th√†nh c√¥ng: ${preview1.length} ng∆∞·ªùi d√πng`);
    } catch (error) {
      console.error('   ‚ùå L·ªói:', error.message);
      console.error('   Stack:', error.stack);
    }

    // Test 2: Ch·ªâ c√≥ fromHour v√† toHour
    console.log('\n2Ô∏è‚É£ Test ch·ªâ c√≥ fromHour v√† toHour:');
    try {
      const preview2 = await getUsersForDeletion({
        fromHour: 9,
        toHour: 12
      });
      console.log(`   ‚úÖ Th√†nh c√¥ng: ${preview2.length} ng∆∞·ªùi d√πng`);
    } catch (error) {
      console.error('   ‚ùå L·ªói:', error.message);
      console.error('   Stack:', error.stack);
    }

    // Test 3: Ch·ªâ c√≥ fromDate v√† toDate
    console.log('\n3Ô∏è‚É£ Test ch·ªâ c√≥ fromDate v√† toDate:');
    try {
      const preview3 = await getUsersForDeletion({
        fromDate: '2025-08-17',
        toDate: '2025-08-17'
      });
      console.log(`   ‚úÖ Th√†nh c√¥ng: ${preview3.length} ng∆∞·ªùi d√πng`);
    } catch (error) {
      console.error('   ‚ùå L·ªói:', error.message);
      console.error('   Stack:', error.stack);
    }

    console.log('\n‚úÖ Test ho√†n t·∫•t!');

  } catch (error) {
    console.error('‚ùå L·ªói test:', error);
  }
}

// Ch·∫°y test
testSimplePreview(); 