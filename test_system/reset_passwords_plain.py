#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys
import mysql.connector
from mysql.connector import Error

def reset_passwords_to_plain():
    """Reset t·∫•t c·∫£ m·∫≠t kh·∫©u v·ªÅ d·∫°ng plain text"""
    try:
        config = {
            'host': os.environ.get('DB_HOST', 'mariadb'),
            'port': int(os.environ.get('DB_PORT', 3306)),
            'user': os.environ.get('DB_USER', 'nqd_user'),
            'password': os.environ.get('DB_PASSWORD', 'nqd_password'),
            'database': os.environ.get('DB_NAME', 'nqd_database')
        }
        
        print(f"ƒêang k·∫øt n·ªëi ƒë·∫øn MariaDB t·∫°i {config['host']}:{config['port']}...")
        conn = mysql.connector.connect(**config)
        
        if conn.is_connected():
            print("‚úÖ K·∫øt n·ªëi database th√†nh c√¥ng!")
            
            cursor = conn.cursor()
            
            # L·∫•y danh s√°ch t·∫•t c·∫£ user
            cursor.execute("SELECT id, username FROM users")
            users = cursor.fetchall()
            
            print(f"T√¨m th·∫•y {len(users)} ng∆∞·ªùi d√πng trong database.")
            
            # Reset m·∫≠t kh·∫©u v·ªÅ d·∫°ng plain text
            for user_id, username in users:
                # T·∫°o m·∫≠t kh·∫©u ƒë∆°n gi·∫£n d·ª±a tr√™n username
                if username == 'admin':
                    plain_password = 'admin123'
                elif username == 'test_hash_user':
                    plain_password = 'test123'
                else:
                    plain_password = f"{username}123"
                
                # C·∫≠p nh·∫≠t m·∫≠t kh·∫©u
                cursor.execute("UPDATE users SET password = %s WHERE id = %s", (plain_password, user_id))
                print(f"‚úÖ ƒê√£ reset m·∫≠t kh·∫©u cho {username}: {plain_password}")
            
            conn.commit()
            print("\nüéâ ƒê√£ reset t·∫•t c·∫£ m·∫≠t kh·∫©u th√†nh c√¥ng!")
            
            # Hi·ªÉn th·ªã danh s√°ch user v√† m·∫≠t kh·∫©u
            print("\n===== DANH S√ÅCH USER V√Ä M·∫¨T KH·∫®U =====")
            cursor.execute("SELECT username, password FROM users")
            user_passwords = cursor.fetchall()
            
            for username, password in user_passwords:
                print(f"Username: {username:<15} | Password: {password}")
            
            cursor.close()
            conn.close()
            return True
            
    except Error as e:
        print(f"‚ùå L·ªói: {e}")
        return False

def main():
    print("===== RESET M·∫¨T KH·∫®U V·ªÄ D·∫†NG PLAIN TEXT =====")
    print("‚ö†Ô∏è  C·∫¢NH B√ÅO: M·∫≠t kh·∫©u s·∫Ω ƒë∆∞·ª£c l∆∞u d∆∞·ªõi d·∫°ng plain text!")
    
    confirm = input("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ti·∫øp t·ª•c? (yes/no): ")
    if confirm.lower() == 'yes':
        success = reset_passwords_to_plain()
        if success:
            print("\n‚úÖ Ho√†n th√†nh! B√¢y gi·ªù b·∫°n c√≥ th·ªÉ ƒëƒÉng nh·∫≠p v·ªõi m·∫≠t kh·∫©u plain text.")
        else:
            print("\n‚ùå C√≥ l·ªói x·∫£y ra!")
    else:
        print("ƒê√£ h·ªßy thao t√°c.")

if __name__ == "__main__":
    main() 