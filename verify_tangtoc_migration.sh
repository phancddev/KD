#!/bin/bash

# Script ki·ªÉm tra migration TƒÉng T·ªëc ƒë√£ ch·∫°y th√†nh c√¥ng ch∆∞a
# S·ª≠ d·ª•ng: ./verify_tangtoc_migration.sh

set -e

echo "üîç KI·ªÇM TRA MIGRATION TƒÇNG T·ªêC"
echo "================================"
echo ""

# L·∫•y th√¥ng tin database t·ª´ docker-compose ho·∫∑c env
DB_HOST=${DB_HOST:-localhost}
DB_PORT=${DB_PORT:-3307}
DB_USER=${DB_USER:-nqd_user}
DB_PASSWORD=${DB_PASSWORD:-nqd_password}
DB_NAME=${DB_NAME:-nqd_database}

# Ki·ªÉm tra k·∫øt n·ªëi database
echo "üìä Ki·ªÉm tra k·∫øt n·ªëi database..."
if ! mysql -h"$DB_HOST" -P"$DB_PORT" -u"$DB_USER" -p"$DB_PASSWORD" -e "SELECT 1" > /dev/null 2>&1; then
    echo "‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn database!"
    echo "   Host: $DB_HOST:$DB_PORT"
    echo "   User: $DB_USER"
    echo "   Database: $DB_NAME"
    exit 1
fi
echo "‚úÖ K·∫øt n·ªëi database th√†nh c√¥ng!"
echo ""

# Ki·ªÉm tra c√°c b·∫£ng TƒÉng T·ªëc
echo "üìã Ki·ªÉm tra c√°c b·∫£ng TƒÉng T·ªëc..."
TABLES=(
    "tangtoc_answers"
    "tangtoc_question_reports"
    "tangtoc_answer_suggestions"
    "tangtoc_answer_suggestion_logs"
    "tangtoc_question_deletion_logs"
    "deleted_tangtoc_question_answers"
)

MISSING_TABLES=()
for table in "${TABLES[@]}"; do
    if mysql -h"$DB_HOST" -P"$DB_PORT" -u"$DB_USER" -p"$DB_PASSWORD" "$DB_NAME" -e "DESCRIBE $table" > /dev/null 2>&1; then
        echo "  ‚úÖ B·∫£ng $table t·ªìn t·∫°i"
    else
        echo "  ‚ùå B·∫£ng $table KH√îNG t·ªìn t·∫°i"
        MISSING_TABLES+=("$table")
    fi
done
echo ""

# Ki·ªÉm tra c·ªôt image_url trong tangtoc_question_reports
echo "üîç Ki·ªÉm tra c·ªôt image_url..."
if mysql -h"$DB_HOST" -P"$DB_PORT" -u"$DB_USER" -p"$DB_PASSWORD" "$DB_NAME" -e "DESCRIBE tangtoc_question_reports" 2>/dev/null | grep -q "image_url"; then
    echo "  ‚úÖ C·ªôt image_url t·ªìn t·∫°i trong tangtoc_question_reports"
    IMAGE_URL_OK=true
else
    echo "  ‚ùå C·ªôt image_url KH√îNG t·ªìn t·∫°i trong tangtoc_question_reports"
    IMAGE_URL_OK=false
fi

# Ki·ªÉm tra c·ªôt c≈© question_image_url
if mysql -h"$DB_HOST" -P"$DB_PORT" -u"$DB_USER" -p"$DB_PASSWORD" "$DB_NAME" -e "DESCRIBE tangtoc_question_reports" 2>/dev/null | grep -q "question_image_url"; then
    echo "  ‚ö†Ô∏è  C·ªôt question_image_url v·∫´n t·ªìn t·∫°i (c·∫ßn migration)"
    OLD_COLUMN_EXISTS=true
else
    echo "  ‚úÖ C·ªôt question_image_url ƒë√£ ƒë∆∞·ª£c ƒë·ªïi t√™n ho·∫∑c kh√¥ng t·ªìn t·∫°i"
    OLD_COLUMN_EXISTS=false
fi
echo ""

# Ki·ªÉm tra indexes
echo "üîç Ki·ªÉm tra indexes..."
INDEXES=(
    "idx_tangtoc_answers_question_id:tangtoc_answers"
    "idx_tangtoc_question_reports_status:tangtoc_question_reports"
    "idx_tangtoc_question_reports_created_at:tangtoc_question_reports"
    "idx_tangtoc_question_deletion_logs_deleted_at:tangtoc_question_deletion_logs"
)

MISSING_INDEXES=()
for index_info in "${INDEXES[@]}"; do
    IFS=':' read -r index_name table_name <<< "$index_info"
    if mysql -h"$DB_HOST" -P"$DB_PORT" -u"$DB_USER" -p"$DB_PASSWORD" "$DB_NAME" -e "SHOW INDEX FROM $table_name WHERE Key_name='$index_name'" 2>/dev/null | grep -q "$index_name"; then
        echo "  ‚úÖ Index $index_name t·ªìn t·∫°i"
    else
        echo "  ‚ö†Ô∏è  Index $index_name kh√¥ng t·ªìn t·∫°i"
        MISSING_INDEXES+=("$index_name")
    fi
done
echo ""

# T·ªïng k·∫øt
echo "================================"
echo "üìä K·∫æT QU·∫¢ KI·ªÇM TRA"
echo "================================"

if [ ${#MISSING_TABLES[@]} -eq 0 ] && [ "$IMAGE_URL_OK" = true ] && [ "$OLD_COLUMN_EXISTS" = false ]; then
    echo "‚úÖ MIGRATION HO√ÄN T·∫§T TH√ÄNH C√îNG!"
    echo ""
    echo "T·∫•t c·∫£ b·∫£ng ƒë√£ ƒë∆∞·ª£c t·∫°o:"
    for table in "${TABLES[@]}"; do
        echo "  ‚úì $table"
    done
    echo ""
    echo "C·ªôt image_url ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh ƒë√∫ng."
    echo ""
    
    if [ ${#MISSING_INDEXES[@]} -gt 0 ]; then
        echo "‚ö†Ô∏è  M·ªôt s·ªë indexes ch∆∞a ƒë∆∞·ª£c t·∫°o (kh√¥ng ·∫£nh h∆∞·ªüng ch·ª©c nƒÉng):"
        for index in "${MISSING_INDEXES[@]}"; do
            echo "  - $index"
        done
    else
        echo "‚úÖ T·∫•t c·∫£ indexes ƒë√£ ƒë∆∞·ª£c t·∫°o."
    fi
    
    exit 0
else
    echo "‚ùå MIGRATION CH∆ØA HO√ÄN T·∫§T!"
    echo ""
    
    if [ ${#MISSING_TABLES[@]} -gt 0 ]; then
        echo "C√°c b·∫£ng c√≤n thi·∫øu:"
        for table in "${MISSING_TABLES[@]}"; do
            echo "  ‚úó $table"
        done
        echo ""
    fi
    
    if [ "$IMAGE_URL_OK" = false ]; then
        echo "‚ö†Ô∏è  C·ªôt image_url ch∆∞a ƒë∆∞·ª£c t·∫°o trong tangtoc_question_reports"
        echo ""
    fi
    
    if [ "$OLD_COLUMN_EXISTS" = true ]; then
        echo "‚ö†Ô∏è  C·ªôt question_image_url v·∫´n t·ªìn t·∫°i, c·∫ßn ch·∫°y migration ƒë·ªïi t√™n"
        echo ""
        echo "Ch·∫°y l·ªánh sau ƒë·ªÉ s·ª≠a:"
        echo "  docker-compose restart app"
        echo ""
    fi
    
    echo "KHUY·∫æN NGH·ªä:"
    echo "  1. Ki·ªÉm tra logs: docker-compose logs app | grep -i migration"
    echo "  2. Restart app: docker-compose restart app"
    echo "  3. Ch·∫°y l·∫°i script n√†y ƒë·ªÉ verify"
    echo ""
    
    exit 1
fi

